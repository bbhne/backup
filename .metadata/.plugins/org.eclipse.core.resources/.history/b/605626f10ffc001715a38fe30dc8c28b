package ec.zahura.dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import ec.zahura.dto.MyPageDTO;
import ec.zahura.util.DBConnector;

public class FavoriteDAO {

	private DBConnector dbConnector = new DBConnector();
	private Connection connection = dbConnector.getConnection();

	List<MyPageDTO> favoList = new ArrayList<MyPageDTO>();
	private String itemName;

//
//	public MyPageDTO selectItemTtransaction(String itemName){
//		String itemTransactionId = null;
//		//String itemName = null;
//
//		// item_info_transactionテーブルからitem_transaction_idをもってくる
//
//		String sql_item_info_transaction = "SELECT * FROM item_info_transaction where item_name = ?";
//		try {
//
//			PreparedStatement preparedStatement = connection.prepareStatement(sql_item_info_transaction);
//			preparedStatement.setString(1, itemName);
//			ResultSet resultSet = preparedStatement.executeQuery();
//
//			//リストにつめる
//			while(resultSet.next()) {
//				MyPageDTO dto = new MyPageDTO();
//				dto.setId(resultSet.getString("id"));
//				dto.setItemName(resultSet.getString("item_name"));
//				dto.setItemImage(resultSet.getString("item_image"));
//
//				favoList.add(dto);
//			}
//
//	if(resultSet.next()) {
//				itemTransactionId = resultSet.getString("id");
//				itemName = resultSet.getString("item_name");
//			}
//		}catch(Exception e) {
//			e.printStackTrace();
//		}
//	}
//
//	public List<MyPageDTO> selectFavoriteItem(String userMasterId){
//
//		// item_favoriteテーブルへ登録
//
//		try {
//			String sql = "SELECT * FROM item_favorite where user_master_id = ?";
//			PreparedStatement ps = connection.prepareStatement(sql);
//			ps.setString(1,userMasterId);
//			ResultSet rs = ps.executeQuery();
//			while(rs.next()) {
//				MyPageDTO dto = new MyPageDTO();
//				dto.setItemName(rs.getString("item_name"));
//				favoList.add(dto);
//			}
////
//
//		}catch(Exception e) {
//			e.printStackTrace();
//		}finally {
//			try {
//				connection.close();
//			} catch (SQLException e) {
//				e.printStackTrace();
//			}
//		}
//
//
//	}
//
//	public int insertFavoriteItem(String itemName, String itemImage, String itemTransactionId, String itemPrice, String count,String userMasterId){
//
//		// item_favoriteテーブルへ登録
//
//		try {
//			String sql_item_favorite = "INSERT INTO item_favorite(item_name, item_image, item_transaction_id, item_price, item_stock, user_masgter_id, insert_date)"
//					+ " VALUES(?,?,?,?,?,?, NOW())";
//			PreparedStatement ps = connection.prepareStatement(sql_item_favorite);
//					System.out.println("item_transaction_id:"+itemTransactionId);
//					ps.setString(1, itemName);
//					ps.setString(2, itemImage);
//					ps.setString(3, itemTransactionId);
//					ps.setString(4, itemPrice);
//					ps.setString(5,count);
//					ps.setString(6, userMasterId);
//
//
//			int count = ps.executeUpdate();
//					System.out.println(count+"件更新");
//
//
//			String sql_item_favorite_select = "SELECT * FROM item_favorite where user_master_id = ?";
//			PreparedStatement preparedStatementSelect = connection.prepareStatement(sql_item_favorite_select);
//					System.out.println("item_transaction_id:"+itemTransactionId);
//			preparedStatementSelect.setString(1,itemTransactionId);
//			ResultSet resultSetSelect = preparedStatementSelect.executeQuery();
//			while(resultSetSelect.next()) {
//				MyPageDTO dto = new MyPageDTO();
//				dto.setItemName(resultSetSelect.getString("item_name"));
//				favoList.add(dto);
//			}
////
//
//		}catch(Exception e) {
//			e.printStackTrace();
//		}finally {
//			try {
//				connection.close();
//			} catch (SQLException e) {
//				e.printStackTrace();
//			}
//		}
//	}
//
//
//	public List<MyPageDTO> favoList(String item, String itemName, String itemTransaction) {
//
//		String itemTransactionId = null;
//		//String itemName = null;
//
//		// item_info_transactionテーブルからitem_transaction_idをもってくる
//
//		String sql_item_info_transaction = "SELECT * FROM item_info_transaction where item_name = ?";
//		try {
//
//			PreparedStatement preparedStatement = connection.prepareStatement(sql_item_info_transaction);
//			preparedStatement.setString(1, itemName);
//			ResultSet resultSet = preparedStatement.executeQuery();
//
//			//リストにつめる
//			while(resultSet.next()) {
//				MyPageDTO dto = new MyPageDTO();
//				dto.setItemName(resultSet.getString("item_name"));
//				favoList.add(dto);
//			}
//
//	if(resultSet.next()) {
//				itemTransactionId = resultSet.getString("id");
//				itemName = resultSet.getString("item_name");
//			}
//		}catch(Exception e) {
//			e.printStackTrace();
//		}
//
//
//		// item_favoriteテーブルへ登録
//
//		try {
//			String sql_item_favorite = "INSERT INTO item_favorite(user_master_id,item_name, insert_date) VALUES(?,?, NOW())";
//			PreparedStatement preparedStatement = connection.prepareStatement(sql_item_favorite);
//					System.out.println("item_transaction_id:"+itemTransactionId);
//			preparedStatement.setString(1,itemTransactionId);
//			preparedStatement.setString(2, itemName);
//
//			int count = preparedStatement.executeUpdate();
//					System.out.println(count+"件更新");
//
//
//			String sql_item_favorite_select = "SELECT * FROM item_favorite where user_master_id = ?";
//			PreparedStatement preparedStatementSelect = connection.prepareStatement(sql_item_favorite_select);
//					System.out.println("item_transaction_id:"+itemTransactionId);
//			preparedStatementSelect.setString(1,itemTransactionId);
//			ResultSet resultSetSelect = preparedStatementSelect.executeQuery();
//			while(resultSetSelect.next()) {
//				MyPageDTO dto = new MyPageDTO();
//				dto.setItemName(resultSetSelect.getString("item_name"));
//				favoList.add(dto);
//			}
////
//
//		}catch(Exception e) {
//			e.printStackTrace();
//		}finally {
//			try {
//				connection.close();
//			} catch (SQLException e) {
//				e.printStackTrace();
//			}
//		}
//		return favoList;
//
//	}



	public List<MyPageDTO> FavoList() {
		return favoList;
	}

	public String getItemName() {
		return itemName;
	}
	public void setItemName(String itemName) {
		this.itemName = itemName;
	}




}


