package ec.zahura.action;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.struts2.interceptor.SessionAware;

import com.opensymphony.xwork2.ActionSupport;

import ec.zahura.dao.BuyItemCompleteDAO;
import ec.zahura.dto.BuyItemComplete;

public class BuyItemConfirmAction extends ActionSupport implements SessionAware {

	//
	private String itemTransactionId;
	private String item;
	private String itemName;
	private String itemPrice;
	private String count;
	private String checkList;
	private String itemStock;
	private String pay;
	private String userMasterId;
	public Map<String,Object> session;

	private BuyItemCompleteDAO buyItemCompleteDAO = new BuyItemCompleteDAO();

	public List<BuyItemComplete> buyConfList = new ArrayList<BuyItemComplete>();
	//
	/**
	 * 商品購入情報登録メソッド
	 */

	public String execute() throws SQLException {

		String[] itemTransactionIdList = itemTransactionId.split(", ",0);
		String[] itemNameList = itemName.split(",",0);
		String[] itemPriceList = itemPrice.split(",",0);
		String[] countList = count.split(",",0);
		String[] favoriteItemTransactionIdList = checkList.split(", ",0);

		for(int i = 0; i < favoriteItemTransactionIdList.length;i++) {
			int id = Integer.parseInt(favoriteItemTransactionIdList[i]);
				System.out.println(id);


				BuyItemCompleteDAO dao = new BuyItemCompleteDAO();
				String item_transaction_id=itemTransactionIdList[i].toString();
				String user_master_id=userMasterId;
				int price=Integer.parseInt(itemPriceList[i].toString());
				int c=Integer.parseInt(countList[i].toString());
				String total_price =String.valueOf(price*c);
				String total_count=c;
				dao.buyItemInfo(item_transaction_id, user_master_id, total_price, total_count, pay);

				BuyItemComplete dto = new BuyItemComplete();
				dto.setItemTransactionId(itemTransactionIdList[i].toString());
				dto.setItemName(itemNameList[i].toString());
				dto.setItemPrice(itemPriceList[i].toString());
				dto.setCount(countList[i].toString());
				dto.setUserMasterId(userMasterId);
				buyConfList.add(dto);

		}
		String result = SUCCESS;
		return result;
	}

	public String getItemTransactionId() {
		return itemTransactionId;
	}

	public void setItemTransactionId(String itemTransactionId) {
		this.itemTransactionId = itemTransactionId;
	}

	public String getItem() {
		return item;
	}

	public void setItem(String item) {
		this.item = item;
	}

	public String getItemName() {
		return itemName;
	}

	public void setItemName(String itemName) {
		this.itemName = itemName;
	}

	public String getItemPrice() {
		return itemPrice;
	}

	public void setItemPrice(String itemPrice) {
		this.itemPrice = itemPrice;
	}

	public String getCount() {
		return count;
	}

	public void setCount(String count) {
		this.count = count;
	}

	public String getCheckList() {
		return checkList;
	}

	public void setCheckList(String checkList) {
		this.checkList = checkList;
	}

	public String getItemStock() {
		return itemStock;
	}

	public void setItemStock(String itemStock) {
		this.itemStock = itemStock;
	}

	public String getPay() {
		return pay;
	}

	public void setPay(String pay) {
		this.pay = pay;
	}

	public String getUserMasterId() {
		return userMasterId;
	}

	public void setUserMasterId(String userMasterId) {
		this.userMasterId = userMasterId;
	}

	public Map<String, Object> getSession() {
		return session;
	}

	public void setSession(Map<String, Object> session) {
		this.session = session;
	}

	public List<BuyItemComplete> getBuyConfList() {
		return buyConfList;
	}

	public void setBuyConfList(List<BuyItemComplete> buyConfList) {
		this.buyConfList = buyConfList;
	}

	public BuyItemCompleteDAO getBuyItemCompleteDAO() {
		return buyItemCompleteDAO;
	}

	public void setBuyItemCompleteDAO(BuyItemCompleteDAO buyItemCompleteDAO) {
		this.buyItemCompleteDAO = buyItemCompleteDAO;
	}


}

