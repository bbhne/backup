package ec.zahura.action;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.apache.struts2.interceptor.SessionAware;

import com.opensymphony.xwork2.ActionSupport;

import ec.zahura.dao.BuyItemDAO;
import ec.zahura.dto.BuyItemDTO;

public class BuyItemAction extends ActionSupport implements SessionAware {



	/**
	 * アイテム情報を格納
	 */
	public Map<String,Object> session;

	private String itemTransactionId;
	private String itemName;
	private String itemImage;
	private String itemPrice;
	/**
	 * アイテム購入個数
	 */
	private String count;
	private String checkList;
	/**
	 * 支払い方法
	 */
	private String pay;
	private String userMasterId;


	private String errorMessage;

	private List<BuyItemDTO> buyItemList = new ArrayList<BuyItemDTO>();


	/**
	 * 商品情報取得メソッド
	 */
	public String execute() {
		String result=ERROR;
//		System.out.println("-----------BuyItemAction");
//		System.out.println(itemTransactionId);
//		System.out.println(itemName);
//		System.out.println(itemImage);
//		System.out.println(itemPrice);
//		System.out.println(count);
//		System.out.println(checkList);
//		System.out.println(pay);
//		System.out.println(userMasterId);
//		System.out.println("------------------------");

		errorMessage=null;

		if(checkList==null || checkList.isEmpty() ){
			errorMessage="商品が何も選択されていません。";
			// アイテム情報を取得
			BuyItemDAO buyItemDAO = new BuyItemDAO();
			//アイテム情報を取得
			buyItemList = buyItemDAO.getBuyItemList();
			return ERROR;
		}


		String[] itemTransactionIdList = itemTransactionId.split(", ", 0);
		String[] itemNameList = itemName.split(", ", 0);
		String[] itemPriceList = itemPrice.split(", ", 0);
		String[] countList = count.split(", ", 0);
		String[] favoriteItemTransactionIdList = checkList.split(", ", 0);


		for(int i=0; i< favoriteItemTransactionIdList.length;i++){
			int id=Integer.parseInt(favoriteItemTransactionIdList[i]);
			System.out.println(id);

				BuyItemDTO dto=new BuyItemDTO();
				dto.setItemTransactionId(itemTransactionIdList[id-1].toString());
				int price=Integer.parseInt(String.valueOf(itemPriceList[id-1]));
				int c=Integer.parseInt(String.valueOf(countList[id-1]));
				System.out.println(price);
				System.out.println(c);
				int total=price*c;
				System.out.println("小計："+ (total));
				dto.setTotalPrice(String.valueOf(total));
				dto.setUserMasterId(userMasterId);
				dto.setPay(pay);

				dto.setItemName(itemNameList[id-1].toString());
				dto.setItemPrice(itemPriceList[id-1].toString());
//				dto.setCount(countList[id-1].toString());
				dto.setUserMasterId(userMasterId);
				buyItemList.add(dto);
		}

		System.out.println("購入商品が"+ buyItemList.size()+"件ありました");

//		int count=0;
//		BuyItemDAO dao = new BuyItemDAO();
//		for(int i=0;i<buyItemList.size();i++){
//			count += dao.insertBuyItem(buyItemList);
//		}
//		System.out.println("データベースに登録された件数："+ count);
//
//		buyItemList = dao.selectBuyItemConfirmList(userMasterId);
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//		result = SUCCESS;
//		session.put("count", count);
//		int intCount = Integer.parseInt(session.get("count").toString());
//		int intPrice = Integer.parseInt(session.get("buyItem_price").toString());
//
//		session.put("total_price", intCount * intPrice);
//		String payment;
//
//		if(pay.equals("1")) {
//			payment = "現金払い";
//			session.put("pay", payment);
//		}else {
//			payment = "クレジットカード";
//			session.put("pay", payment);
//		}
		return result;
	}


	public Map<String, Object> getSession() {
		return session;
	}


	public void setSession(Map<String, Object> session) {
		this.session = session;
	}


	public String getItemTransactionId() {
		return itemTransactionId;
	}


	public void setItemTransactionId(String itemTransactionId) {
		this.itemTransactionId = itemTransactionId;
	}


	public String getItemName() {
		return itemName;
	}


	public void setItemName(String itemName) {
		this.itemName = itemName;
	}


	public String getItemImage() {
		return itemImage;
	}


	public void setItemImage(String itemImage) {
		this.itemImage = itemImage;
	}


	public String getItemPrice() {
		return itemPrice;
	}


	public void setItemPrice(String itemPrice) {
		this.itemPrice = itemPrice;
	}


	public String getCount() {
		return count;
	}


	public void setCount(String count) {
		this.count = count;
	}


	public String getCheckList() {
		return checkList;
	}


	public void setCheckList(String checkList) {
		this.checkList = checkList;
	}


	public String getPay() {
		return pay;
	}


	public void setPay(String pay) {
		this.pay = pay;
	}


	public String getUserMasterId() {
		return userMasterId;
	}


	public void setUserMasterId(String userMasterId) {
		this.userMasterId = userMasterId;
	}


	public String getErrorMessage() {
		return errorMessage;
	}


	public void setErrorMessage(String errorMessage) {
		this.errorMessage = errorMessage;
	}


	public List<BuyItemDTO> getBuyItemList() {
		return buyItemList;
	}


	public void setBuyItemList(List<BuyItemDTO> buyItemList) {
		this.buyItemList = buyItemList;
	}


}
